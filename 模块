#创建一个const模块，功能是让Python支持常量
import const
const.NAME = 'FishC'
print(const.NAME)
try:
	#尝试修改常量
	const.NAME = 'FishC.com'
except TypeError as Err:
	print(Err)
try:
	#变量名需要大写
	const.name = 'FishC'
except TypeError as Err:
	print(Err)
#const 模块就是这道题要求我们自己写的
#提示一：我们需要一个Const类
#提示二：重写Const类的某一个魔法方法，指向当实例对象的属性被修改时的行为
#提示三：检查该属性是否已存在
#提示四：检查该属性的名字是否为大写
#提示五：const模块导入之后就把它当对象来使用（const.NAME = "FishC"）了,在Python中无处不对象，使用以下方法可以将模块与类A的对象挂钩。
'''
sys.models 是一个字典，它包含了从Python开始运行起，被导入的所有模块。键就是模块名，值就是模块对象。
'''
import sys
sys.modules[__name__] = A()

# 该模块的用于让Python支持常量操作
class Const:
	def __setattr__(self,name,value):
		if name in self.__dict__:
			raise TypeError('常量无法改变！')
		if not name.isupper():
			raise TypeError('常量名必须由大写字母组成！')
		self.__dict__[name] = value
import sys
sys.modules[__name__] = Const()
